// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: codemen.org/inventory/gunk/v1/sell/all.proto

package sellpb

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int32          `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CustomerId   int32          `protobuf:"varint,2,opt,name=CustomerId,proto3" json:"CustomerId,omitempty"`
	CustomerName string         `protobuf:"bytes,3,opt,name=CustomerName,proto3" json:"CustomerName,omitempty"`
	SoldProducts []*SoldProduct `protobuf:"bytes,4,rep,name=SoldProducts,proto3" json:"SoldProducts,omitempty"`
	TotalPrice   float32        `protobuf:"fixed32,5,opt,name=TotalPrice,proto3" json:"TotalPrice,omitempty"`
}

func (x *Sell) Reset() {
	*x = Sell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sell) ProtoMessage() {}

func (x *Sell) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sell.ProtoReflect.Descriptor instead.
func (*Sell) Descriptor() ([]byte, []int) {
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP(), []int{0}
}

func (x *Sell) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Sell) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *Sell) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *Sell) GetSoldProducts() []*SoldProduct {
	if x != nil {
		return x.SoldProducts
	}
	return nil
}

func (x *Sell) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

type SoldProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId      int32   `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	ProductName    string  `protobuf:"bytes,2,opt,name=ProductName,proto3" json:"ProductName,omitempty"`
	UnitPrice      float32 `protobuf:"fixed32,3,opt,name=UnitPrice,proto3" json:"UnitPrice,omitempty"`
	Quantity       int32   `protobuf:"varint,4,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	TotalUnitPrice float32 `protobuf:"fixed32,5,opt,name=TotalUnitPrice,proto3" json:"TotalUnitPrice,omitempty"`
}

func (x *SoldProduct) Reset() {
	*x = SoldProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoldProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoldProduct) ProtoMessage() {}

func (x *SoldProduct) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoldProduct.ProtoReflect.Descriptor instead.
func (*SoldProduct) Descriptor() ([]byte, []int) {
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP(), []int{1}
}

func (x *SoldProduct) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *SoldProduct) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *SoldProduct) GetUnitPrice() float32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *SoldProduct) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SoldProduct) GetTotalUnitPrice() float32 {
	if x != nil {
		return x.TotalUnitPrice
	}
	return 0
}

type CreateSellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId      int32           `protobuf:"varint,1,opt,name=CustomerId,proto3" json:"CustomerId,omitempty"`
	ProductQuantity map[int32]int32 `protobuf:"bytes,2,rep,name=ProductQuantity,proto3" json:"ProductQuantity,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *CreateSellRequest) Reset() {
	*x = CreateSellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSellRequest) ProtoMessage() {}

func (x *CreateSellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSellRequest.ProtoReflect.Descriptor instead.
func (*CreateSellRequest) Descriptor() ([]byte, []int) {
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSellRequest) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *CreateSellRequest) GetProductQuantity() map[int32]int32 {
	if x != nil {
		return x.ProductQuantity
	}
	return nil
}

type CreateSellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sell *Sell `protobuf:"bytes,1,opt,name=Sell,proto3" json:"Sell,omitempty"`
}

func (x *CreateSellResponse) Reset() {
	*x = CreateSellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSellResponse) ProtoMessage() {}

func (x *CreateSellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSellResponse.ProtoReflect.Descriptor instead.
func (*CreateSellResponse) Descriptor() ([]byte, []int) {
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSellResponse) GetSell() *Sell {
	if x != nil {
		return x.Sell
	}
	return nil
}

type ListSellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchTerm string `protobuf:"bytes,1,opt,name=SearchTerm,proto3" json:"SearchTerm,omitempty"`
	Offset     int32  `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit      int32  `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *ListSellRequest) Reset() {
	*x = ListSellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSellRequest) ProtoMessage() {}

func (x *ListSellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSellRequest.ProtoReflect.Descriptor instead.
func (*ListSellRequest) Descriptor() ([]byte, []int) {
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP(), []int{4}
}

func (x *ListSellRequest) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

func (x *ListSellRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListSellRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListSellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sells []*Sell `protobuf:"bytes,1,rep,name=Sells,proto3" json:"Sells,omitempty"`
}

func (x *ListSellResponse) Reset() {
	*x = ListSellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSellResponse) ProtoMessage() {}

func (x *ListSellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSellResponse.ProtoReflect.Descriptor instead.
func (*ListSellResponse) Descriptor() ([]byte, []int) {
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP(), []int{5}
}

func (x *ListSellResponse) GetSells() []*Sell {
	if x != nil {
		return x.Sells
	}
	return nil
}

type GetSellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetSellRequest) Reset() {
	*x = GetSellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSellRequest) ProtoMessage() {}

func (x *GetSellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSellRequest.ProtoReflect.Descriptor instead.
func (*GetSellRequest) Descriptor() ([]byte, []int) {
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP(), []int{6}
}

func (x *GetSellRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetSellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sell *Sell `protobuf:"bytes,1,opt,name=Sell,proto3" json:"Sell,omitempty"`
}

func (x *GetSellResponse) Reset() {
	*x = GetSellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSellResponse) ProtoMessage() {}

func (x *GetSellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSellResponse.ProtoReflect.Descriptor instead.
func (*GetSellResponse) Descriptor() ([]byte, []int) {
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP(), []int{7}
}

func (x *GetSellResponse) GetSell() *Sell {
	if x != nil {
		return x.Sell
	}
	return nil
}

type UpdateSellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sell *Sell `protobuf:"bytes,1,opt,name=Sell,proto3" json:"Sell,omitempty"`
}

func (x *UpdateSellRequest) Reset() {
	*x = UpdateSellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSellRequest) ProtoMessage() {}

func (x *UpdateSellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSellRequest.ProtoReflect.Descriptor instead.
func (*UpdateSellRequest) Descriptor() ([]byte, []int) {
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateSellRequest) GetSell() *Sell {
	if x != nil {
		return x.Sell
	}
	return nil
}

type UpdateSellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sell *Sell `protobuf:"bytes,1,opt,name=Sell,proto3" json:"Sell,omitempty"`
}

func (x *UpdateSellResponse) Reset() {
	*x = UpdateSellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSellResponse) ProtoMessage() {}

func (x *UpdateSellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSellResponse.ProtoReflect.Descriptor instead.
func (*UpdateSellResponse) Descriptor() ([]byte, []int) {
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateSellResponse) GetSell() *Sell {
	if x != nil {
		return x.Sell
	}
	return nil
}

var File_codemen_org_inventory_gunk_v1_sell_all_proto protoreflect.FileDescriptor

var file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x63, 0x6f, 0x64, 0x65, 0x6d, 0x65, 0x6e, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x6c, 0x6c, 0x2f, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62, 0x22, 0xbf, 0x01, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x6c, 0x12,
	0x16, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x20, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x35, 0x0a, 0x0c, 0x53, 0x6f, 0x6c,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xb6, 0x01, 0x0a, 0x0b, 0x53, 0x6f, 0x6c,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1f, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00,
	0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1c, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x22, 0x0a, 0x0e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e,
	0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x42, 0x0a, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18,
	0x00, 0x22, 0xc8, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x53, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x1a, 0x36, 0x0a, 0x14,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x02, 0x38, 0x01, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x44, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00,
	0x18, 0x00, 0x22, 0x70, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x12, 0x1a, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x12, 0x19, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00,
	0x10, 0x00, 0x18, 0x00, 0x22, 0x43, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x53, 0x65, 0x6c, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x30, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x41, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x53, 0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73,
	0x65, 0x6c, 0x6c, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x43,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x42,
	0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x3a, 0x06, 0x08, 0x00, 0x10,
	0x00, 0x18, 0x00, 0x22, 0x44, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x53, 0x65, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x32, 0xf6, 0x01, 0x0a, 0x0b, 0x53, 0x65,
	0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06,
	0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28, 0x00, 0x30, 0x00, 0x12, 0x49, 0x0a, 0x08, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c,
	0x12, 0x16, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28, 0x00, 0x30, 0x00, 0x1a, 0x03, 0x88,
	0x02, 0x00, 0x42, 0x44, 0x48, 0x01, 0x50, 0x00, 0x5a, 0x29, 0x63, 0x6f, 0x64, 0x65, 0x6d, 0x65,
	0x6e, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f,
	0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6c, 0x6c, 0x3b, 0x73, 0x65, 0x6c,
	0x6c, 0x70, 0x62, 0x80, 0x01, 0x00, 0x88, 0x01, 0x00, 0x90, 0x01, 0x00, 0xb8, 0x01, 0x00, 0xd8,
	0x01, 0x00, 0xf8, 0x01, 0x01, 0xd0, 0x02, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescOnce sync.Once
	file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescData = file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDesc
)

func file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescGZIP() []byte {
	file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescOnce.Do(func() {
		file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescData)
	})
	return file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDescData
}

var (
	file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
	file_codemen_org_inventory_gunk_v1_sell_all_proto_goTypes  = []interface{}{
		(*Sell)(nil),               // 0: sellpb.Sell
		(*SoldProduct)(nil),        // 1: sellpb.SoldProduct
		(*CreateSellRequest)(nil),  // 2: sellpb.CreateSellRequest
		(*CreateSellResponse)(nil), // 3: sellpb.CreateSellResponse
		(*ListSellRequest)(nil),    // 4: sellpb.ListSellRequest
		(*ListSellResponse)(nil),   // 5: sellpb.ListSellResponse
		(*GetSellRequest)(nil),     // 6: sellpb.GetSellRequest
		(*GetSellResponse)(nil),    // 7: sellpb.GetSellResponse
		(*UpdateSellRequest)(nil),  // 8: sellpb.UpdateSellRequest
		(*UpdateSellResponse)(nil), // 9: sellpb.UpdateSellResponse
		nil,                        // 10: sellpb.CreateSellRequest.ProductQuantityEntry
	}
)

var file_codemen_org_inventory_gunk_v1_sell_all_proto_depIdxs = []int32{
	1,  // 0: sellpb.Sell.SoldProducts:type_name -> sellpb.SoldProduct
	10, // 1: sellpb.CreateSellRequest.ProductQuantity:type_name -> sellpb.CreateSellRequest.ProductQuantityEntry
	0,  // 2: sellpb.CreateSellResponse.Sell:type_name -> sellpb.Sell
	0,  // 3: sellpb.ListSellResponse.Sells:type_name -> sellpb.Sell
	0,  // 4: sellpb.GetSellResponse.Sell:type_name -> sellpb.Sell
	0,  // 5: sellpb.UpdateSellRequest.Sell:type_name -> sellpb.Sell
	0,  // 6: sellpb.UpdateSellResponse.Sell:type_name -> sellpb.Sell
	2,  // 7: sellpb.SellService.CreateSell:input_type -> sellpb.CreateSellRequest
	4,  // 8: sellpb.SellService.ListSell:input_type -> sellpb.ListSellRequest
	6,  // 9: sellpb.SellService.GetSell:input_type -> sellpb.GetSellRequest
	3,  // 10: sellpb.SellService.CreateSell:output_type -> sellpb.CreateSellResponse
	5,  // 11: sellpb.SellService.ListSell:output_type -> sellpb.ListSellResponse
	7,  // 12: sellpb.SellService.GetSell:output_type -> sellpb.GetSellResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_codemen_org_inventory_gunk_v1_sell_all_proto_init() }
func file_codemen_org_inventory_gunk_v1_sell_all_proto_init() {
	if File_codemen_org_inventory_gunk_v1_sell_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoldProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_codemen_org_inventory_gunk_v1_sell_all_proto_goTypes,
		DependencyIndexes: file_codemen_org_inventory_gunk_v1_sell_all_proto_depIdxs,
		MessageInfos:      file_codemen_org_inventory_gunk_v1_sell_all_proto_msgTypes,
	}.Build()
	File_codemen_org_inventory_gunk_v1_sell_all_proto = out.File
	file_codemen_org_inventory_gunk_v1_sell_all_proto_rawDesc = nil
	file_codemen_org_inventory_gunk_v1_sell_all_proto_goTypes = nil
	file_codemen_org_inventory_gunk_v1_sell_all_proto_depIdxs = nil
}
